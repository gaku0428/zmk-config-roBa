#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        kakkoL {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <6 7>;
        };

        kakkoR {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <8 7>;
        };

        kakkozl. {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <18 19>;
        };

        kakkoR2 {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <19 20>;
        };

        kakkoL3 {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <30 31>;
        };

        kakkoR3 {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W           &kp E           &kp R                    &kp T                                                            &kp Y                  &kp U  &lt 5 I    &kp O    &kp P
&kp A      &kp S           &kp D           &kp F                    &kp G        &kp TAB                 &kp PLUS                    &kp H                  &kp J  &kp K      &kp L    &kp MINUS
&kp Z      &kp X           &kp C           &kp V                    &kp B        &lt 6 LEFT_ALT          &kp MINUS                   &kp N                  &kp M  &kp COMMA  &kp DOT  &kp CAPS
&kp LCTRL  &kp LG(ESCAPE)  &kp LEFT_SHIFT  &mt LEFT_WIN INT_HENKAN  &lt 2 SPACE  &lt 3 INT_MUHENKAN      &mt LEFT_CONTROL BACKSPACE  &mt RIGHT_SHIFT ENTER                             &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                          &kp F12
            >;
        };

        SYNBOL {
            bindings = <
&trans                      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans                      &kp LS(SLASH)    &kp AMPERSAND  &kp SINGLE_QUOTE   &kp COLON         &kp TILDE
&trans                      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans      &trans  &kp EXCLAMATION  &kp AT_SIGN    &kp DOUBLE_QUOTES  &kp SEMI          &kp UNDER
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans      &trans  &trans           &kp PERCENT    &kp LESS_THAN      &kp GREATER_THAN  &kp PIPE
&trans                      &trans           &trans           &trans           &trans  &trans      &trans  &trans                                                               &trans
            >;
        };

        NUMARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PLUS
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp UNDER  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp NUMBER_0
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                               &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB2  &mkp MB3   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB4  &mkp MB5  &mkp LCLK  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                 &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                                &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &bootloader      &bootloader  &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans           &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans           &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
